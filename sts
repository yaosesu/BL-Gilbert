1. B
2. G
3. J
4. b
5. d
6. d
7. a
8. d
9. c
10.a
11.d

Theory Part
3. What is Git and why is it important?
Git is a distributed version control system used for tracking changes in source code during software development. It allows multiple developers to work on a project simultaneously, without interfering with each other's work.

Importance of Git:

- Version Control: Git maintains a history of changes, making it easy to revert to earlier versions of the code.
- Collaboration: Multiple developers can contribute to the same project, merge changes, and resolve conflicts efficiently.
- Branching and Merging: Developers can work on different features in separate branches and merge them back into the main branch once they're complete.
- Backup: Code pushed to remote repositories (like GitHub) is safely backed up and can be accessed from anywhere.
- Open Source: Git is free to use, and its wide adoption means robust community support and a plethora of learning resources.
4. What are the various steps/commands youâ€™ll use to create a frontend/backend project and push it to GitHub?

1. Create a GitHub Repository:
Go to GitHub and log in.
Click the "+" icon in the top right corner and select "New repository".
Enter a name for your repository (e.g., my-project) and click "Create repository".

2. Set Up Your Project :
Open your git terminal.
Navigate to the directory where you want to create your project:
cd path/to/your/directory
Create a new directory for your project and navigate into it:
mkdir my-project
cd my-project

3. Initialize a Git Repository:
Initialize a new Git repository in your project directory:
git init

4. Create Your Project Files:
Create your frontend or backend files. For simplicity, create a basic index.html for frontend or app.js for backend.

5. Stage Your Changes:
Add your project files to the staging area:
git add .

6. Commit Your Changes:
Commit the changes with a message:
git commit -m "Initial commit"

7. Connect to the GitHub Repository:
Copy the URL of your GitHub repository (e.g., https://github.com/your-username/my-project.git).
Add the remote repository:
git remote add origin https://github.com/your-username/my-project.git

8. Push Your Changes to GitHub:
Push your local repository to GitHub:
git push -u origin master

